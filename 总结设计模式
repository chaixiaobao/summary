1、工厂模式：创建型模式，使用者可以省去每次创建对象时候繁琐的初始化动作，对象的初始化需要变动的时候只需改变工厂的创建过程就行了。
2、单例模式：系统中只需要目标类的一个实例。
3、原型模式：快速复制对象的方法，每个新对象都不需要进行自己的初始化过程。
4、代理模式：对目标类的增强，不需要修改目标类的代码，代理类持有目标类的引用，代理类做增强动作，实际功能完成还是通过目标类。
5、委托模式：自己只是做分发和转派，实际功能完成是靠别的类。
6、策略模式：事先定义好的一系列算法，可以相互替换，用户可以自己选择使用哪个算法，主要可以解决系统中if-else和switch过多导致代码深耦合的问题。
7、模板模式：一般通过继承来实现，父类中定义了完成功能的流程，实现了公用的功能，每个子类可以重写父类中的方法达到实现自己特殊功能的需求，整个流程不会变化。
8、适配器模式：一般是系统运行了一段时间之后，需要让老接口能继续可用的时候使用适配器模式，主要解决新老接口的兼容问题。
9、装饰器模式：能够动态的给类增强和覆盖一些功能，能够保持层级关系。
10、观察者模式：像消息订阅一样，被观察的对象发生了一些改变或者事件之后，所有的观察者都能接受到这种改变，从而对这种改变做出响应。